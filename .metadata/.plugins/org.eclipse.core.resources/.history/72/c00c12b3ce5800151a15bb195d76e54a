/*
 * Algorithm.cpp
 *
 *  Created on: Sep 11, 2015
 *      Author: MacBookEr
 */

#include "Algorithm.h"

Algorithm::Algorithm() {
	// TODO Auto-generated constructor stub

}

Algorithm::~Algorithm() {
	// TODO Auto-generated destructor stub
}

string Algorithm::getTestAreWorking() const {
	return "Test are working!";
}

int Algorithm::getSmallestMultipleOfRange(int rangeStart, int rangeStop) const {
	int smallestMultiple = 0;
	int potentialMultiple = 1;
	bool divisible = true;
	int breaker = rangeStart;

	while(smallestMultiple != potentialMultiple) {
		while(breaker <= rangeStop) {
			if(!potentialMultiple % rangeStart == 0) {
				divisible = false;
				breaker = rangeStop;
				potentialMultiple++;
			}
			rangeStart++;
		}
		potentialMultiple++;
	}
}




